package com.hafiz.www.controller;

import com.hafiz.www.po.TechnologyModule;
import com.hafiz.www.po.TypeOfArticle;
import com.hafiz.www.service.ArticleService;
import com.hafiz.www.until.JsonResult;
import com.hafiz.www.until.SaveTheFile;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.multipart.commons.CommonsMultipartResolver;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import java.util.List;

/**
 * 技术文章
 */
@Controller
@RequestMapping("article")
public class ArticleController {

    @Autowired
    private ArticleService articleService;
    @Autowired
    private SaveTheFile saveTheFile;
    /**
     * 跳转发布技术文章页面
     * @param modelAndView 返回modelAndView对象
     * @return
     */
    @RequestMapping(value = "/publishArticle",method = RequestMethod.GET)
    public ModelAndView messageWal(ModelAndView modelAndView){
        modelAndView.setViewName("articles/publishArticle");
        return modelAndView;
    }

    /**
     * 初始化文章分类列表
     * @return json数据
     */
    @RequestMapping(value = "/getTheArticleTypeList",method = RequestMethod.POST)
    @ResponseBody
    public JsonResult getTheArticleTypeList(){
        JsonResult jsonResult = new JsonResult();
        Object result= new Object();
        try {
            List<TypeOfArticle> listData = articleService.getTheTypeOfArtileList();
            jsonResult =jsonResult.newInstanceSucess_d2(listData);
        }catch (Exception e){
            e.printStackTrace();
            jsonResult =jsonResult.newInstanceFail("网络出错，请稍后再试！");
        }

        return jsonResult;
    }

    /**
     * 保存上传文件
     * @param request 上传文件
     * @return 返回文件保存路径
     */
    @RequestMapping(value = "/saveTheFile",method = RequestMethod.POST)
    @ResponseBody
    public JsonResult saveTheFile(HttpServletRequest request) {
        JsonResult jsonResult = new JsonResult();

        //创建一个通用的多部分解析器
        CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver(request.getSession().getServletContext());
        //判断 request 是否有文件上传,即多部分请求
        if(multipartResolver.isMultipart(request)){
            //转换成多部分request
            MultipartHttpServletRequest multiRequest = (MultipartHttpServletRequest)request;
            try {
                String result=saveTheFile.saveTheFile(multiRequest);
                jsonResult =jsonResult.newInstanceSucess_d1(result);
            }catch (Exception e){
                e.printStackTrace();
            }

        }
        return jsonResult;
    }

    /**
     * 发布留言数据保存
     * @param technologyModule  上传数据对象
     * @return 返回保存状态
     */
    @RequestMapping(value = "/publishTheArticle",method = RequestMethod.POST)
    @ResponseBody
    public JsonResult publishTheArticle(TechnologyModule technologyModule){
        JsonResult jsonResult = new JsonResult();

        int data =articleService.insertSelective(technologyModule);
        if(data==-1){
            jsonResult=jsonResult.newInstanceFail("请先登陆系统，再进行操作!");
        }
        if(data>0){
            jsonResult=jsonResult.newInstanceFail("保存成功!"+data);
        }else{
            jsonResult=jsonResult.newInstanceFail("保存失败，请稍后再试!");
        }
        return jsonResult;
    }
}
