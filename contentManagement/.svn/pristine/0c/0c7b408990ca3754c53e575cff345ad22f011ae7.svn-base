package com.hafiz.www.controller;

import com.hafiz.www.po.Userinfo;
import com.hafiz.www.service.UserService;
import com.hafiz.www.shiro.SessionUtils;
import com.hafiz.www.until.CheckCodeService;
import com.hafiz.www.until.JsonResult;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.imageio.ImageIO;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.IOException;

/**
 * Desc:用户信息控制器
 * Created by hafiz.zhang on 2016/8/27.
 */
@Controller
@RequestMapping("/user")
public class UserController {

    @Autowired
    private UserService userService;
    @Autowired
    private CheckCodeService checkCodeService;

    /**
     * 注册
     * @param userinfo 上传用户表单
     * @return
     */
    @RequestMapping(value = "/register",method = RequestMethod.POST)
    @ResponseBody
    public JsonResult Register(Userinfo userinfo){
        JsonResult jsonResult = new JsonResult();
        int id = userService.insertSelective(userinfo);
        if(id==0){
            jsonResult.setSuccess(false);
            jsonResult.setMsg("注册失败");
        }else if(id==-1){
            jsonResult.setSuccess(false);
            jsonResult.setMsg("注册失败！用户名已被使用，请重新输入");
        }else{
            jsonResult.setSuccess(true);
            jsonResult.setMsg("注册成功");
        }
        return jsonResult;
    }
    /**
     * 用户登陆
     * @param userinfo
     * @return
     */
    @RequestMapping(value = "/land",method = RequestMethod.POST)
    @ResponseBody
    public JsonResult Logins(Userinfo userinfo,HttpServletRequest request){
        JsonResult jsonResult = new JsonResult();
        if (userinfo.getU_name() == null) {
            jsonResult= jsonResult.newInstanceFail("用户名不能为空");
        }else if (userinfo.getU_password() == null) {
            jsonResult= jsonResult.newInstanceFail("密码不能为空");
        }else {
            jsonResult = SessionUtils.login(userinfo.getU_name(), userinfo.getU_password(),userinfo.getCode(),request);
        }
        return jsonResult;
    }

    /**
     * 生成校验码图片
     * @param request
     * @param response
     * @throws IOException
     */
    @RequestMapping("/getImage")
    public void getImage(HttpServletRequest request, HttpServletResponse response) throws IOException {
        // 禁止缓存
        response.setHeader("Pragma", "No-cache");
        response.setHeader("Cache-Control", "No-cache");
        response.setDateHeader("Expires", 0);
        // 指定生成的响应是图片
        response.setContentType("image/jpeg");

        //String code = checkCodeService.generateRandomNumberCode();
        String code = checkCodeService.generateRandomMixedCode();
        // 将生成的验证码保存到Session中
        HttpSession session = request.getSession(true);
        session.setAttribute("checkCode", code);
        ImageIO.write(checkCodeService.getImage(code),"JPEG",response.getOutputStream());
    }

}
